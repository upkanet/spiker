<html>

<head>
    <title>Axorus - Spiker</title>
</head>
<style>
    body {
        background-color: black;
    }
</style>
<script src="js/jquery3.5.1.min.js"></script>
<script src="js/plotly-latest.min.js"></script>
<script src="js/fili.min.js"></script>
<script>
    var layoutBlack = { paper_bgcolor: 'black', plot_bgcolor: 'black', font: { color: 'white' } };

    function loadHM() {
        $.getJSON('/emax', function (data) {
            console.log(data);
            data = cutMax(0.01, data);
            var d = { z: squadredArr(data), type: 'heatmap' };
            Plotly.newPlot('heatmap', [d], layoutBlack);
            var PlotHM = document.getElementById('heatmap');
            PlotHM.on('plotly_click', clickHM);
        });
    }

    function clickHM(data) {
        var pc = data.points[0].pointIndex;
        console.log(pc[0], pc[1]);
        $.getJSON('/epos/' + pc[0] + ',' + pc[1], function (data) {
            console.log('Electrode #' + data);
            loadE(data);
        });
    }

    function loadE(n) {
        if (n === undefined) {
            n = $('#eid').val();
        }
        $.getJSON('/electrodes/' + n, function (data) {
            $('#eid').val(n);
            var d = { y: data.map(x => -x), type: 'line' };
            Plotly.newPlot('gElectrode', [d], layoutBlack);
        });
    }
    
    function filterE() {
        var data = document.getElementById('gElectrode').data[0].y;
        var iirCalculator = new Fili.CalcCascades();
        var availableFilters = iirCalculator.available();

        var iirFilterCoeffsLP = iirCalculator.lowpass({
            order: 10, // cascade 3 biquad filters (max: 12)
            characteristic: 'butterworth',
            Fs: 20000, // sampling frequency
            Fc: 3000, // cutoff frequency / center frequency for bandpass, bandstop, peak
            preGain: false
        });
        var iirFilterLP = new Fili.IirFilter(iirFilterCoeffsLP);

        var iirFilterCoeffsHP = iirCalculator.highpass({
            order: 10, // cascade 3 biquad filters (max: 12)
            characteristic: 'butterworth',
            Fs: 20000, // sampling frequency
            Fc: 300, // cutoff frequency / center frequency for bandpass, bandstop, peak
            preGain: false
        });
        var iirFilterHP = new Fili.IirFilter(iirFilterCoeffsHP);

        var dataLP = iirFilterLP.multiStep(data);
        var dataBP = iirFilterHP.multiStep(dataLP);

        var d = { y: dataBP, type: 'line' };
        Plotly.newPlot('gFiltered', [d], layoutBlack);
    }

    function cutMax(threshold, data) {
        var data2 = data;
        var m = 0;
        var p = 0;
        for (var i = 0; i < data.length; i++) {
            m = Math.max(data[i], m);
            if (m == data[i]) {
                p = i;
            }
        }

        data2[p] = threshold * data[p];

        return data2;
    }

    function squadredArr(arr) {
        var m = [];
        var n = arr.length;
        var side = Math.sqrt(n);
        var k = 0;
        for (var i = 0; i < side; i++) {
            m[i] = [];
            for (var j = 0; j < side; j++) {
                m[i][j] = arr[k];
                k++;
            }
        }
        return m;
    }

    $(function () {

    })
</script>

<body>
    <button type="button" onclick="loadHM()">LoadHM</button>
    <div id="heatmap" style="width:500px;height:500px;"></div>
    <input id="eid" type="number"><button type="button" onclick="loadE()">Load</button>
    <div id="gElectrode" style="width:100%;height:500px;"></div>
    <button type="button" onclick="filterE()">Filter</button>
    <div id="gFiltered" style="width:100%;height:500px;"></div>
</body>

</html>